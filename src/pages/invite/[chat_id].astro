---
import type { ChatService, UserService } from "../../../../api/src";
export const prerender = false;

const {chat_id} = Astro.params;
if (!chat_id) throw new Error('no path');

const chat = Astro.locals.runtime.env.Chat as unknown as ChatService;
const user = Astro.locals.runtime.env.User as unknown as UserService;

const cookie = Astro.cookies.get('token')?.value;
if (!cookie) throw new Error('not authentificated');

if (Astro.request.method === "POST") {
	const data = await Astro.request.formData();
	const content = data.get('email')?.toString() || '-';
	const result = await chat.sign(cookie, chat_id, content, 'participant');
	Astro.redirect(`/chat/${chat_id}`);
}

const members = await chat.members(cookie, chat_id)
const users = await user.list();
---
<h1>Members</h1>
{
	members.map((item) => (
		<div>
			{item.user}
		</div>
	))
}

<form method="POST" enctype="multipart/form-data">
	<h2>Invite a user</h2>
	<select name="email">
		{
			users.map((item) => (
				<>
					<option value={item.email}>
						{item.given_name} {item.email}
					</option>
				</>))
		}
	</select>
	<button type="submit">Add</button>
</form>